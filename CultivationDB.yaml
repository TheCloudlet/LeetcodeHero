# Google 衝刺修煉數據庫
# 狀態定義 (Status Definition):
#   L1_FORGOT: (忘) - 必須重學
#   L2_STRUGGLE: (解) - 磕磕絆絆，不夠熟
#   L3_MASTERED: (定) - 20分鐘內零 Bug 秒殺 + 邊界全清
#
# Entry template:
#  - id:
#    title: ""
#    link: "./"
#    leetcode-difficulty:
#    topics: []
#    status:
#    refinement_focus: ""

problems:
  - id: 1
    title: "Two Sum"
    link: ./001_Two_Sum/
    leetcode-difficulty: easy
    topics: [hashtable, array, neetcode150]
    status: L3_MASTERED
    refinement_focus: "Try to use single pass solution"

  - id: 2
    title: "Add Two Numbers"
    link: "./002_Add_Two_Numbers"
    leetcode-difficulty: medium
    topics: [linked-list, indirect-pointer, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "Indirect-pointer and sum/carry"

  - id: 3
    title: "Longest Substring Without Repeating Characters"
    link: "./003_Longest_Substring_Without_Repeating_Characters"
    leetcode-difficulty: medium
    topics: [hashtable, sliding-window, string, neetcode150]
    status: L3_MASTERED
    refinement_focus: "通常這種題目 While 的使用是關鍵"

  - id: 5
    title: "Longest Palindromic Substring"
    link: "./005_Longest_Palindromic_Substring"
    leetcode-difficulty: medium
    topics: [iteration, dp, manachers-algorithm, string, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "Expand, DP, or Manacher's algorithm"

  - id: 6
    title: "Zigzag Conversion"
    link: "./006_Zigzag_Conversion"
    leetcode-difficulty: medium
    topics: [vector, string]
    status: L3_MASTERED
    refinement_focus: "Updown traverse and push to vector"

  - id: 7
    title: "Reverse Integer"
    link: "./007_Reverse_Integer"
    leetcode-difficulty: medium
    topics: [integer, signed, boundary]
    status: L2_STRUGGLE
    refinement_focus: "The key is boundary + minus"

  - id: 8
    title: "String to Integer"
    link: "./008_String_to_Integer"
    leetcode-difficulty: medium
    topics: [parsing, stoi, boundary, signed, overflow]
    status: L3_MASTERED
    refinement_focus: "boundary + minus"

  - id: 9
    title: "Palindrome Number"
    link: "./009_Palindrome_Number"
    leetcode-difficulty: easy
    topics: [iteration]
    status: L3_MASTERED
    refinement_focus: "std::to_string while"

  - id: 11
    title: "Container With Most Water"
    link: "./011_Container_With_Most_Water"
    leetcode-difficulty: medium
    topics: [two-pointer, array, greedy, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "find the smallest of the two sides, and move the pointer"

  - id: 12
    title: "Integer to Roman"
    link: "./012_Integer_to_Roman"
    leetcode-difficulty: medium
    topics: [array]
    status: L2_STRUGGLE
    refinement_focus: "Transform roman to (value, string) pair and decode greedy"

  - id: 13
    title: "Roman to Integer"
    link: "./013 Roman to Integer"
    leetcode-difficulty: medium
    topics: [array]
    status: L2_STRUGGLE
    refinement_focus: "Need to peek next, to know current is + or -"

  - id: 14
    title: "Longest Common Prefix"
    link: "./014_Longest_Common_Prefix"
    leetcode-difficulty: easy
    topics: [array]
    status: L3_MASTERED
    refinement_focus: "The clean solution is to take the first string as golden"

  - id: 15
    title: "3 Sum"
    link: "./015_3Sum"
    leetcode-difficulty: medium
    topics: [two-pointer, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "Dupicates handling is tricky"

  - id: 16
    title: "3 Sum Closest"
    link: "./016_3Sum_Closest"
    leetcode-difficulty: medium
    topics: [two-pointer, array, sorting]
    status: L2_STRUGGLE
    refinement_focus: "Same as 015_3Sum, but need to track closest value"

  - id: 17
    title: "Letter Combinations of a Phone Number"
    link: "./017_Letter_Combinations_of_a_Phone_Number"
    leetcode-difficulty: medium
    topics: [hashtable, backtracking, string]
    status: L3_MASTERED
    refinement_focus: "Write a good helper pure function"

  - id: 18
    title: "4 Sum"
    link: "./014_4Sum"
    leetcode-difficulty: medium
    topics: [k-sum, two-pointer, array, sorting]
    status: L2_STRUGGLE
    refinement_focus: "generalizing k-sum function"

  - id: 19
    title: "Remove Nth Node From End of List"
    link: "./019_Remove_Nth_Node_From_End_of_List"
    leetcode-difficulty: medium
    topics: [fast-and-slow-pointer, linked-list, indirect-pointer, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "Indirect-pointer and fast/slow pointer"

  - id: 20
    title: "Valid Parentheses"
    link: "./020_Valid_Parentheses"
    leetcode-difficulty: easy
    topics: [stack, string, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "I know the stack solution, but I cannot execute it fluently and elegantly"

  - id: 24
    title: "Swap Nodes in Pairs"
    link: "./024_Swap_Nodes_in_Pairs"
    leetcode-difficulty: medium
    topics: [linked-list, indirect-pointer, recursion]
    status: L2_STRUGGLE
    refinement_focus: "While loop or helper recursion"

  - id: 34
    title: "Find First and Last Position of Element in Sorted Array"
    link: "./034_Find_First_and_Last_Position_of_Element_in_Sorted_Array"
    leetcode-difficulty: medium
    topics: [binary-search, array, sorting]
    status: L2_STRUGGLE
    refinement_focus: "lower_bound and upper_bound"

  - id: 35
    title: "Search Insert Position"
    link: "./035_Search_Insert_Position"
    leetcode-difficulty: easy
    topics: [binary-search, array, sorting]
    status: L3_MASTERED
    refinement_focus: "lower_bound"

  - id: 36
    title: "Valid Sudoku"
    link: "./036_Valid_Sudoku"
    leetcode-difficulty: medium
    topics: [hashset, matrix, simulation, neetcode150]
    status: L3_MASTERED
    refinement_focus: "HashSet"

  - id: 42
    title: "Trapping Rain Water"
    link: "./042_Trapping_Rain_Water"
    leetcode-difficulty: hard
    topics: [two-pointer, monotonic-stack, array, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "next-greater-element or two-pointer"

  - id: 48
    title: "Rotate Image"
    link: "./048_Rotate_Image"
    leetcode-difficulty: medium
    topics: [matrix]
    status: L3_MASTERED
    refinement_focus: "Transpose + Reverse"

  - id: 49
    title: "Group Anagrams"
    link: "./049_Group_Anagrams"
    leetcode-difficulty: medium
    topics: [hash-table, string, sorting, neetcode150]
    status: L3_MASTERED
    refinement_focus: "Sorting"

  - id: 56
    title: "Merge Intervals"
    link: "./056_Merge_Intervals"
    leetcode-difficulty: medium
    topics: [array, sorting, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "Sorting + Iterate and Merge"

  - id: 61
    title: "Rotate List"
    link: "./061_Rotate_List"
    leetcode-difficulty: medium
    topics: [linked-list, two-pointer, indirect-pointer]
    status: L3_MASTERED
    refinement_focus: "Make the list circular first. There are optimiazations like if k == length, do nothing"

  - id: 70
    title: "Climbing Stairs"
    link: "./070_Climbing_Stairs"
    leetcode-difficulty: easy
    topics: [dp, math, neetcode150]
    status: L3_MASTERED
    refinement_focus: "Fibonacci, bottom-up DP, top-down DP, or even math"

  - id: 91
    title: "Decode Ways"
    link: "./091_Decode_Ways"
    leetcode-difficulty: medium
    topics: [dp, string, backtracking, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "dp[i] means ways to decode s[0..i-1]. Also, we need to handle 1 digit and 2 digit separately"

  - id: 96
    title: "Unique Binary Search Trees"
    link: "./096_Unique_Binary_Search_Trees"
    leetcode-difficulty: medium
    topics: [dp, math, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "dp[n] means number of unique BST that can be built with n nodes. dp[n] = sum of dp[i-1]*dp[n-i] for i in [1..n]. Catalan number"

  - id: 125
    title: "Valid Palindrome"
    link: "./125_Valid_Palindrome"
    leetcode-difficulty: easy
    topics: [two-pointer, string, neetcode150]
    status: L3_MASTERED
    refinement_focus: "isalnum() and tolower()"

  - id: 128
    title: "Longest Consecutive Sequence"
    link: "./128_Longest_Consecutive_Sequence"
    leetcode-difficulty: medium
    topics: [hashset, array, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "sort is O(n log n), use HashSet to achieve O(n). Check only sequence starters"

  - id: 139
    title: "Word Break"
    link: "./139_Word_Break"
    leetcode-difficulty: medium
    topics: [dp, string, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "Not absolutely sure I can get this right during interview, but I know the idea. ip[i] means s[i..end] can be segmented. Need a helper function isPrefix and a recursive function with memo"

  - id: 146
    title: "LRU Cache"
    link: "./146_LRU_Cache"
    leetcode-difficulty: medium
    topics: [design, linked-list, hashtable, neetcode150]
    status: L2_STRUGGLE
    refinement_focus: "Always practice. Use std::list + std::unordered_map. please understand why use list"

  - id: 150
    title: "Evaluate Reverse Polish Notation"
    link: "./150_Evaluate_Reverse_Polish_Notation"
    leetcode-difficulty: medium
    topics: [stack, array, neetcode150]
    status: L3_MASTERED
    refinement_focus: "Edge case are tricky, but the idea is straightforward. Alwasy think when the input is invalid"

#  - id:
#    title: ""
#    link: "./"
#    leetcode-difficulty:
#    topics: []
#    status:
#    refinement_focus: ""

  - id: 647
    title: "Palindromic Substrings"
    link: "./647_Palindromic_Substrings"
    leetcode-difficulty: medium
    topics: [dp, string, neetcode150]
    status: L1_FORGOT
    refinement_focus: "Very similar to 005_Longest_Palindromic_Substring"

#  - id:
#    title: ""
#    link: "./"
#    leetcode-difficulty:
#    topics: []
#    status:
#    refinement_focus: ""
