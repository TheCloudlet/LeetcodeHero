#+title: 15 3sum

* Take away
- Think about duplicates
- =-1 * pivot= can be =-pivot=

* Code
** First attempt

#+BEGIN_SRC cpp
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        std::sort(nums.begin(), nums.end());
        for (int pivot = 0; pivot < nums.size(); pivot++) {
            int l = pivot + 1;
            int r = nums.size() - 1;
            while (l < r) {
                int sum = nums[l] + nums[r];
                if (sum == -1 * nums[pivot]) {
                    result.push_back({nums[pivot], nums[l], nums[r]});
                    break;
                } else if (sum > -1 * nums[pivot]) {
                    --r;
                } else {
                    ++l;
                }
            }
        }
        return result;
    }
};
#+END_SRC

*Problem*:
nums=[0,0,0,0], expect [[0,0,0]]
get [[0,0,0],[0,0,0]]

** Core Problem: Duplicates
#+BEGIN_SRC cpp
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        std::sort(nums.begin(), nums.end());
        for (int pivot = 0; pivot < nums.size(); pivot++) {
            if (pivot > 0 && nums[pivot] == nums[pivot - 1]) {
                continue;
            } // skip duplicates
            int l = pivot + 1;
            int r = nums.size() - 1;
            while (l < r) {
                int sum = nums[l] + nums[r];
                if (sum == -nums[pivot]) {
                    result.push_back({nums[pivot], nums[l], nums[r]});
                    while (l < r && nums[l] == nums[l + 1]) {
                        ++l;
                    } // skip duplicates
                    while (l < r && nums[l] == nums[r - 1]) {
                        --r;
                    } // skip duplicates
                    ++l;
                    --r;
                } else if (sum > -nums[pivot]) {
                    --r;
                } else {
                    ++l;
                }
            }
        }
        return result;
    }
};
#+END_SRC