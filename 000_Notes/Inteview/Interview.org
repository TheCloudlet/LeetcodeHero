#+title: Coding Interview 流程總整理

* 1. Plan Your Code（思考與規劃）

- Clarify the problem
  - 釐清題目需求與限制條件
  - 詢問資料範圍、是否為有序、是否有重複等特性
  - 舉一個或兩個 input/output 範例
    例如：
    Input: [1, 2, 3], target = 5
    Output: false

- Explain your approach
  - 說出最直接或最笨的做法 (Brute force)
  - 描述演算法邏輯與步驟
  - 初步寫下 algorithm outline，例如：
    1. sort array
    2. loop through
    3. use binary search
  - 指出預期時間複雜度與空間使用

* 2. Write Your Code（開始實作）

- 邊寫邊講解
  - 口語化說明每一步寫的意圖與對應的演算法邏輯
  - 例如：「這裡我初始化 left, right 來做 binary search」

- 若卡住，標記 TODO 並往下繼續
  - 例如：「這裡 index 有點難抓，我先留下 TODO，等一下回來改」

* 3. Explain & Improve（說明與優化）

- Run test cases
  - 測試正常輸入、邊界輸入（空 array、最大最小值）
  - 口頭模擬程式執行過程，確認邏輯正確

- 講解複雜度
  - 時間複雜度 O(log n)，空間複雜度 O(1)
  - 提到有沒有可優化之處

- 問面試官意見
  - Would you like me to optimize this?
  - Should I consider follow-up like rotated input?

* Tips 小提醒

- 想不到最佳解時，先講 Brute force 是合理起點
- 寫完後用口語帶一次程式邏輯
- 主動處理 edge case，表現出資深思維
- 保持講話節奏與邏輯清晰，像在教一個 junior engineer
